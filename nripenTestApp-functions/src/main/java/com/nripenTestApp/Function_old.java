package com.nripenTestApp;

import com.microsoft.azure.functions.ExecutionContext;
import com.microsoft.azure.functions.HttpMethod;
import com.microsoft.azure.functions.HttpRequestMessage;
import com.microsoft.azure.functions.HttpResponseMessage;
import com.microsoft.azure.functions.HttpStatus;
import com.microsoft.azure.functions.annotation.AuthorizationLevel;
import com.microsoft.azure.functions.annotation.FunctionName;
import com.microsoft.azure.functions.annotation.HttpTrigger;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;

/**
 * Azure Functions with HTTP Trigger.
 */
public class Function_old {
	@Autowired
	ServiceClass serviceClass;
    /**
     * This function listens at endpoint "/api/HttpExample". Two ways to invoke it using "curl" command in bash:
     * 1. curl -d "HTTP Body" {your host}/api/HttpExample
     * 2. curl "{your host}/api/HttpExample?name=HTTP%20Query"
     */
    @FunctionName("HttpExample")
    public HttpResponseMessage run(
            @HttpTrigger(
                name = "req",
                methods = {HttpMethod.GET, HttpMethod.POST},
                authLevel = AuthorizationLevel.ANONYMOUS)
                HttpRequestMessage<Optional<String>> request,
            final ExecutionContext context) {
        context.getLogger().info("Java HTTP trigger processed a request.");

        // Parse query parameter
		
//		  final String query = request.getQueryParameters().get("name"); final String
//		  name = request.getBody().orElse(query);
//		  
//		  
//		  
//			if (name == null) {
//				return request.createResponseBuilder(HttpStatus.BAD_REQUEST)
//						.body("Hi! Please pass a name on the query string or in the request body").build();
//			} else {
//				return request.createResponseBuilder(HttpStatus.OK).body("Ola!, " + name).build();
//			}
		if (serviceClass == null) {
			serviceClass = new ServiceClass();
			String msg1 = serviceClass.helloService();
//			return request.createResponseBuilder(HttpStatus.OK).body(msg1).build();
			return request
	                .createResponseBuilder(HttpStatus.OK)
	                .body(msg1)
	                .header("Content-Type", "application/json")
	                .build();
		}
		String msg = "abcd";
		return request.createResponseBuilder(HttpStatus.OK).body(msg).build();
	}
}
