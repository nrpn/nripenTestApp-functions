
**************CREATE AN AZURE FUNCTION APP IN LOCAL**************

Step1:
Add following dependencies in pom file:
<dependency>
            <groupId>com.microsoft.azure.functions</groupId>
            <artifactId>azure-functions-java-library</artifactId>
            <version>${azure.functions.java.library.version}</version>
        </dependency>
		<dependency>
    <groupId>io.projectreactor</groupId>
    <artifactId>reactor-core</artifactId>
    <version>3.4.7</version>
</dependency>
    <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-function-adapter-azure -->
<dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-function-adapter-azure</artifactId>
    <version>3.1.3</version>
</dependency>

    <dependencyManagement>
      <dependencies>
<!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-function-dependencies -->
<dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-function-dependencies</artifactId>
    <version>1.0.0.M1</version>
    <type>pom</type>
</dependency>

      </dependencies>
    </dependencyManagement>
	
	    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.microsoft.azure</groupId>
                <artifactId>azure-functions-maven-plugin</artifactId>
                <version>${azure.functions.maven.plugin.version}</version>
                <configuration>
                    <!-- function app name -->
                    <appName>${functionAppName}</appName>
                    <!-- function app resource group -->
                    <resourceGroup>azureLearning</resourceGroup>
                    <!-- function app service plan name -->
                    <appServicePlanName>java-functions-app-service-plan</appServicePlanName>
                    <!-- function app region-->
                    <!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details#supported-regions for all valid values -->
                    <region>Central US</region>
                    <!-- function pricingTier, default to be consumption if not specified -->
                    <!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details#supported-pricing-tiers for all valid values -->
                    <!-- <pricingTier></pricingTier> -->
                    <!-- Whether to disable application insights, default is false -->
                    <!-- refers https://github.com/microsoft/azure-maven-plugins/wiki/Azure-Functions:-Configuration-Details for all valid configurations for application insights-->
                    <!-- <disableAppInsights></disableAppInsights> -->
                    <runtime>
                        <!-- runtime os, could be windows, linux or docker-->
                        <os>windows</os>
                        <javaVersion>8</javaVersion>
                    </runtime>
                    <appSettings>
                        <property>
                            <name>FUNCTIONS_EXTENSION_VERSION</name>
                            <value>~3</value>
                        </property>
                    </appSettings>
                </configuration>
                <executions>
                    <execution>
                        <id>package-functions</id>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--Remove obj folder generated by .NET SDK in maven clean-->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>obj</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>
	
Step2:
To write an azure function, annotate the method with @FunctionName("functionName").
Method signature will be like this public HttpResponseMessage run(HttpRequestMessage<Optional<String>> request, final ExecutionContext context);
Step3:
To make the function be triggered by Http call, annotate the first argumant of the method with @HttpTrigger like below:
@HttpTrigger(name = "req",methods = {HttpMethod.GET, HttpMethod.POST},authLevel = AuthorizationLevel.ANONYMOUS)HttpRequestMessage<Optional<String>> request

Sample method:
@FunctionName("HttpTriggeredFunction1")
    public HttpResponseMessage run(
            @HttpTrigger(
                name = "req",
                methods = {HttpMethod.GET, HttpMethod.POST},
                authLevel = AuthorizationLevel.ANONYMOUS)
                HttpRequestMessage<Optional<String>> request,
            final ExecutionContext context) {
        context.getLogger().info("Java HTTP trigger processed a request.");
		return request.createResponseBuilder(HttpStatus.OK).body(msg1).build();
		}
Sample response of the method:
return request
	                .createResponseBuilder(HttpStatus.OK)
	                .body(msg.toString())
	                .header("Content-Type", "application/json")
	                .build();
return request.createResponseBuilder(HttpStatus.OK).body("custome msg").build();

Step4:
To make the function be triggered by timer, method signature will be like public void run(String timerInfo1,final ExecutionContext context)
Annotate the first argumant of the method with @TimerTrigger like below:
@FunctionName("TmTrgFn_CostAndPerformanceTest")
    public void run(
        @TimerTrigger(name = "timerInfo1", schedule = "0/30 * * * * *") String timerInfo1,
        final ExecutionContext context
    ){
	context.getLogger().info("Java timer trigger processed a request.");
	}
	
Schedule expression is important and denotes how frequently the function will run in azure. This configuration can be changed later from within azure. Instructions given below.

To run the azure function locally, do following:
Right click on project -> Run As -> Maven Build -> set goal as "clean package" then again same with goal as "azure-functions:run"
For debug: "azure-functions:run -DenableDebug"

**************END OF CREATE AN AZURE FUNCTION APP IN LOCAL**************

*****************DEPLOYMENT NOTES******************
To deploy zip file from Azure CLI:
az functionapp deployment source config-zip -g azureLearning -n \nripenFunctionsApp1 --src C:\Users\nripen\git\repository\nripenTestApp-functions\target\azure-functions\nripenFunctionsApp1.zip

To deploy azure function from IDE
Right click on project -> Run As -> Maven Build -> set goal as "clean package" then "azure-functions:deploy" 

To change schedule configuration from within Azure:
go to  azure function resource page -> Configuration (left list) -> Application Settings tab:
Delete the entry WEBSITE_RUN_FROM_PACKAGE
go to azure timer function in portal -> select the function -> go to integration in the left -> then click on the funcion name under function block -> upload/replace function.json file
no need to redeploy the app.

*****************END OF DEPLOYMENT NOTES******************

*****************OTHER NOTES******************
http://localhost:8080/azureFunctionTest/hello

https://nripenfunctionsapp1.azurewebsites.net/api/HttpExample?

Publish-AzWebapp -ResourceGroupName azureLearning -Name nripenFunctionsApp1 -ArchivePath C:\Users\nripen\git\repository\nripenTestApp-functions\target
az functionapp deployment source config-zip -g azureLearning -n \nripenFunctionsApp1 --src C:\Users\nripen\git\repository\nripenTestApp-functions\target\nripenTestApp-functions-0.0.1-SNAPSHOT.jar
*****************END OF OTHER NOTES******************
